.row-fluid
  .span2.profile-column
    %div
      = render 'profile/avatar', user: @user
      = @user.online? ? t('online') : t('offline')
    %p
      :textile
        *Age:*
        #{profile.optional_info_age}

        ---

        *Body Type:*
        #{"#{t "enums.height.value_#{profile.optional_info_height}"} â€“ "}#{t "enums.body_type.value_#{profile.optional_info_body_type}"}

        ---

        *Hair / Eyes:*
        #{t "enums.hair_color.value_#{profile.optional_info_hair_color}"} / #{t "enums.eye_color.value_#{profile.optional_info_eye_color}"}

        ---

        *Education*
        #{t "enums.education.value_#{profile.optional_info_education}"}

        ---

        *Children*
        #{t "enums.children.value_#{profile.optional_info_children}"}

        ---

        *Ethnicity*
        #{t "enums.ethnicity.value_#{profile.optional_info_ethnicity}"}

        ---

        *Religion*
        #{t "enums.religion.value_#{profile.optional_info_religion}"}

        ---

        *Smoking / Drinking*
        #{t "enums.me_smoker.value_#{profile.optional_info_smoker}"} / #{t "enums.me_drinker.value_#{profile.optional_info_drinker}"}

        ---

  .span10.profile-column
    - unless profile.reviewed?
      .pull-right.muted
        %small= link_to 'Public profile here', user_profile_path(profile.auto_user)
        %br
        %strong= t 'profile.review.under_review'
    :textile
      h3. #{profile.name_cache || profile.auto_user.name} <small>(#{t "enums.gender.value_#{profile.personal_preferences_sex}"})</small>

      ---

      **#{profile.optional_info_age} / #{profile.general_info_address_line_1}, #{profile.general_info_address_line_2} / #{profile.general_info_city}, #{profile.general_info_state}**

      !#{gmap_for(profile)}!

      __#{profile.general_info_tagline}__
    = render 'profiles/invite_link', user: @user
    = render 'profiles/block_link', user: @user
    = render 'profiles/send_wink_link', user: @user
    = render 'profiles/favorite_link', user: @user

    - unless @user == current_user
      = link_to 'Albums', user_albums_path(@user), class: :btn
      = render 'profiles/send_gift_link', user: @user
      = render 'profiles/report_violation_link', profile: profile
      = render 'profiles/send_message_link', user: @user


    - if can? :manage, profile
      .row-fluid
        .span12
          .accordion#dev_info_accordion
            .accordion-group
              .accordion-heading
                %a.accordion-toggle{ 'data-toggle' => 'collapse', 'data-parent' => '#dev_info_accordion', href: '#collapse_dev_info' }
                  Dev info (it will go away)
              .accordion-body.collapse#collapse_dev_info
                .accordion-inner
                  %div
                    last_sign_in_ip:
                    = profile.auto_user.last_sign_in_ip
                  %div
                    sign_in_count:
                    = profile.auto_user.sign_in_count
                  %div
                    failed login counts:
                    = profile.auto_user.failed_sign_in_count

    :textile
      h3. About

      ---

      h4. About me:

    = profile.general_info_description
    :textile

      h4. My First Date Expectations:

    = profile.date_preferences_description

    :textile

      <br>

      *Occupation:*
      #{profile.optional_info_occupation}

      ---

      *Annual Income:*
      #{t "enums.income.value_#{profile.optional_info_annual_income}"}

      ---

      *Net Worth:*
      #{t "enums.net_worth.value_#{profile.optional_info_net_worth}"}

      ---

      *Relationship Status:*
    - profile.personal_relationship_multiselect.each do |select|
      %span= t "enums.relationship.value_#{select.to_s}"
      = '/'

    :textile

      ---

      *Looking To Meet:*
    - profile.personal_partners_sex_multiselect.each do |select|
      %span= t "enums.gender.value_#{select.to_s}"
      = '/'

    :textile
      ---

      *Interested In:*
    - profile.personal_want_relationship_multiselect.each do |select|
      %span= t "enums.want_relationship.value_#{select.to_s}"
      = '/'

    :textile
      ---
